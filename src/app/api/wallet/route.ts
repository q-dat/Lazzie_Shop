import { NextRequest, NextResponse } from 'next/server';
import { connectDB } from '@/lib/mongodb';
import Wallet from '@/models/Wallet';
import cloudinary from '@/lib/cloudinary';

export async function GET() {
  try {
    await connectDB();
    const wallets = await Wallet.find();
    return NextResponse.json({ message: 'Get all', success: true, data: wallets });
  } catch (error) {
    console.error('L·ªói:', error);
    return NextResponse.json({ message: 'L·ªói khi l·∫•y danh s√°ch v√≠', success: false }, { status: 500 });
  }
}

export async function POST(req: NextRequest) {
  try {
    await connectDB();
    const formData = await req.formData();

    const mainFile = formData.get('image') as Blob | null;
    const thumbFile = formData.get('thumbnail') as Blob | null;

    if (!mainFile || !thumbFile) {
      return NextResponse.json({ success: false, message: '·∫¢nh ch√≠nh ho·∫∑c ·∫£nh ph·ª• kh√¥ng h·ª£p l·ªá' }, { status: 400 });
    }

    // Convert file th√†nh Base64
    const mainBuffer = Buffer.from(await mainFile.arrayBuffer());
    const thumbBuffer = Buffer.from(await thumbFile.arrayBuffer());

    const mainBase64 = `data:${mainFile.type};base64,${mainBuffer.toString('base64')}`;
    const thumbBase64 = `data:${thumbFile.type};base64,${thumbBuffer.toString('base64')}`;

    // üìå **Upload ·∫£nh ch√≠nh v·ªõi resize v√† WebP**
    const mainUpload = await cloudinary.uploader.upload(mainBase64, {
      folder: 'wallets/main',
      format: 'webp', // Chuy·ªÉn sang ƒë·ªãnh d·∫°ng WebP
      transformation: [
        { width: 300, height: 300, crop: 'fill' }, // Resize ·∫£nh ch√≠nh
      ],
    });

    // üìå **Upload ·∫£nh ph·ª• v·ªõi resize v√† WebP**
    const thumbUpload = await cloudinary.uploader.upload(thumbBase64, {
      folder: 'wallets/thumbnails',
      format: 'webp', // Chuy·ªÉn sang ƒë·ªãnh d·∫°ng WebP
      transformation: [
        { width: 300, height: 300, crop: 'thumb' }, // Resize ·∫£nh thumbnail
      ],
    });

    // L∆∞u v√†o MongoDB
    const newWallet = new Wallet({
      wallet_catalog_id: formData.get('wallet_catalog_id'),
      name: formData.get('name'),
      color: formData.get('color'),
      quantity: formData.get('quantity'),
      price: Number(formData.get('price')),
      image: mainUpload.secure_url, // ·∫¢nh ch√≠nh (WebP)
      thumbnail: thumbUpload.secure_url, // ·∫¢nh ph·ª• (WebP)
    });

    await newWallet.save();

    return NextResponse.json({ message: 'T·∫°o v√≠ th√†nh c√¥ng', success: true, data: newWallet });
  } catch (error) {
    console.error('L·ªói:', error);
    return NextResponse.json({ message: 'L·ªói khi t·∫°o v√≠', success: false }, { status: 500 });
  }
}
